require 'buildr/scala'
require 'buildr/groovy'
# configure a different groovy-version
Buildr::Groovy::Groovyc::REQUIRES.groovy = '1.6.0'

repositories.remote << "http://www.ibiblio.org/maven2/"

define "compiler" do

  # define the project-version
  project.version = '1.0.0'

  # define project-specific options
  compile.options.target = '1.5'
  compile.options.lint = 'all'
  # compile.using :target=>'1.5', :lint=>'all' => does the same in one line

  compile.options.warning = 'off'

  # define a groovy subproject
  define "groovyproject" do
    compile.using(:groovyc) # you dont have to define the compiler, buildr will look for the .groovy extension in src/main/groovy
    package(:jar)
  end

  # define a java subproject
  define "javaproject" do
    compile.from(_(:src, :main, :java)) # compile from src/main/java
    compile.with('org.apache.axis2:axis2:jar:1.2')  # use axis as dependency
    compile.into(_(:target, :classes))  # compile into target/classes
    compile.using(:target=>'1.6') # compile using Java 6 compiler
    # you could have chained all calls to compile, because the methods all return the task they configure
    package(:jar)
  end

  # define a scala subproject
  define "scalaproject" do
    compile.using(:scalac) # you dont have to define the compiler, buildr will look for the .scala extension in src/main/scala
    package(:jar)
  end

end
